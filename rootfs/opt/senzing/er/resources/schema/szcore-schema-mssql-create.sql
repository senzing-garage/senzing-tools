CREATE TABLE LIB_FEAT (LIB_FEAT_ID bigint NOT NULL, FTYPE_ID smallint NOT NULL, VERSION smallint NOT NULL, FEAT_HASH VARCHAR(40) NOT NULL, FEAT_DESC VARCHAR(150), FELEM_VALUES VARCHAR(3000) NOT NULL, ANONYMIZED CHAR(1) NOT NULL)
ALTER TABLE LIB_FEAT ADD CONSTRAINT LIB_FEAT_PK PRIMARY KEY CLUSTERED (LIB_FEAT_ID) WITH (OPTIMIZE_FOR_SEQUENTIAL_KEY=ON)
CREATE UNIQUE INDEX LIB_FEAT_SK ON LIB_FEAT(FEAT_HASH, FTYPE_ID, ANONYMIZED)

CREATE TABLE SYS_HW_CHECK (LIB_FEAT_ID bigint NOT NULL, FTYPE_ID smallint NOT NULL, VERSION smallint NOT NULL, FEAT_HASH VARCHAR(40) NOT NULL, FEAT_DESC VARCHAR(150), FELEM_VALUES VARCHAR(3000) NOT NULL, ANONYMIZED CHAR(1) NOT NULL) 
ALTER TABLE SYS_HW_CHECK ADD CONSTRAINT SYS_HW_CHECK_PK PRIMARY KEY CLUSTERED (LIB_FEAT_ID) WITH (OPTIMIZE_FOR_SEQUENTIAL_KEY=ON)
CREATE UNIQUE INDEX SYS_HW_CHECK_SK ON SYS_HW_CHECK(FEAT_HASH, FTYPE_ID, ANONYMIZED) 

CREATE TABLE DSRC_RECORD (CONFIG_ID bigint, FIRST_SEEN_DT DATETIME, LAST_SEEN_DT DATETIME, RECORD_ID VARCHAR(250) NOT NULL, ENT_SRC_KEY VARCHAR(40) NOT NULL, DSRC_ID smallint NOT NULL, JSON_DATA VARCHAR(MAX)) 
ALTER TABLE DSRC_RECORD ADD CONSTRAINT DSRC_RECORD_PK PRIMARY KEY NONCLUSTERED (RECORD_ID, DSRC_ID)

CREATE INDEX DSRC_RECORD_SK ON DSRC_RECORD(ENT_SRC_KEY, DSRC_ID) 

CREATE TABLE OBS_ENT (OBS_ENT_ID bigint NOT NULL, LOCKING_ID bigint NOT NULL, LAST_TOUCH_DT bigint, DSRC_ID smallint NOT NULL, LOCK_DSRC_ACTION CHAR(1), ENT_SRC_KEY VARCHAR(40) NOT NULL, FEATURES VARCHAR(MAX)) 
ALTER TABLE OBS_ENT ADD CONSTRAINT OBS_ENT_PK PRIMARY KEY NONCLUSTERED (OBS_ENT_ID) WITH (OPTIMIZE_FOR_SEQUENTIAL_KEY=ON)
CREATE UNIQUE INDEX OBS_ENT_SK ON OBS_ENT(ENT_SRC_KEY, DSRC_ID) 

CREATE TABLE RES_ENT (RES_ENT_ID bigint NOT NULL, LOCKING_ID bigint NOT NULL, LAST_TOUCH_DT bigint, ENT_STATE bigint, LOCK_DSRC_ACTION CHAR(1)) 
ALTER TABLE RES_ENT ADD CONSTRAINT RES_ENT_PK PRIMARY KEY NONCLUSTERED (RES_ENT_ID) WITH (OPTIMIZE_FOR_SEQUENTIAL_KEY=ON)

CREATE TABLE RES_ENT_OKEY (OBS_ENT_ID bigint NOT NULL, RES_ENT_ID bigint NOT NULL, MATCH_KEY VARCHAR(1000), ERRULE_ID smallint NOT NULL) 
ALTER TABLE RES_ENT_OKEY ADD CONSTRAINT RES_ENT_OKEY_PK PRIMARY KEY NONCLUSTERED (OBS_ENT_ID)
CREATE CLUSTERED INDEX RES_ENT_OKEY_SK ON RES_ENT_OKEY(RES_ENT_ID, OBS_ENT_ID) 

CREATE TABLE RES_FEAT_EKEY (RES_ENT_ID bigint NOT NULL, LIB_FEAT_ID bigint NOT NULL, OBS_ENT_CNT bigint, USED_FROM_DT DATETIME, USED_THRU_DT DATETIME, FTYPE_ID smallint NOT NULL, SUPPRESSED CHAR(1), UTYPE_CODE VARCHAR(255) NOT NULL) 
ALTER TABLE RES_FEAT_EKEY ADD CONSTRAINT RES_FEAT_EKEY_PK PRIMARY KEY CLUSTERED (LIB_FEAT_ID, RES_ENT_ID, UTYPE_CODE)
CREATE INDEX RES_FEAT_EKEY_SK ON RES_FEAT_EKEY(RES_ENT_ID) 

CREATE TABLE RES_FEAT_STAT (LIB_FEAT_ID bigint NOT NULL, FTYPE_ID SMALLINT NOT NULL, NUM_RES_ENT int NOT NULL, NUM_RES_ENT_OOM int NOT NULL, CANDIDATE_CAP_REACHED CHAR(1) DEFAULT 'N' NOT NULL, SCORING_CAP_REACHED CHAR(1) DEFAULT 'N' NOT NULL) 
ALTER TABLE RES_FEAT_STAT ADD CONSTRAINT RES_FEAT_STAT_PK PRIMARY KEY CLUSTERED (LIB_FEAT_ID) WITH (OPTIMIZE_FOR_SEQUENTIAL_KEY=ON)

CREATE TABLE RES_RELATE (RES_REL_ID bigint NOT NULL, MIN_RES_ENT_ID bigint NOT NULL, MAX_RES_ENT_ID bigint NOT NULL, LAST_ERRULE_ID smallint, IS_DISCLOSED TINYINT, IS_AMBIGUOUS TINYINT, MATCH_KEY VARCHAR(1000), MATCH_KEY_DETAILS VARCHAR(MAX), MATCH_LEVELS VARCHAR(50) NULL) 
ALTER TABLE RES_RELATE ADD CONSTRAINT RES_RELATE_PK PRIMARY KEY NONCLUSTERED (RES_REL_ID) WITH (OPTIMIZE_FOR_SEQUENTIAL_KEY=ON)

CREATE TABLE RES_REL_EKEY (RES_ENT_ID bigint NOT NULL, REL_ENT_ID bigint NOT NULL, RES_REL_ID bigint NOT NULL) 
ALTER TABLE RES_REL_EKEY ADD CONSTRAINT RES_REL_EKEY_PK PRIMARY KEY CLUSTERED (RES_ENT_ID, REL_ENT_ID)

CREATE TABLE SYS_SEQUENCE (SEQUENCE_NAME VARCHAR(50) NOT NULL, NEXT_SEQUENCE bigint NOT NULL, CACHE_SIZE bigint NOT NULL) 
ALTER TABLE SYS_SEQUENCE ADD CONSTRAINT SYS_SEQUENCE_PK PRIMARY KEY NONCLUSTERED (SEQUENCE_NAME)
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE) VALUES ('ER_ID',1,100000)
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE) VALUES ('LIB_FEAT_ID',1,100000)
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE) VALUES ('OBS_ENT_ID',1,100000)
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE) VALUES ('OBS_ID',1,100000)
INSERT INTO SYS_SEQUENCE (SEQUENCE_NAME,NEXT_SEQUENCE,CACHE_SIZE) VALUES ('RES_REL_ID',1,100000)

CREATE TABLE SYS_CFG (CONFIG_DATA_ID bigint NOT NULL, CONFIG_DATA VARCHAR(MAX) NOT NULL, CONFIG_COMMENTS VARCHAR(200) NOT NULL, SYS_CREATE_DT DATETIME NOT NULL) 
ALTER TABLE SYS_CFG ADD CONSTRAINT SYS_CFG_PK PRIMARY KEY NONCLUSTERED (CONFIG_DATA_ID)

CREATE TABLE SYS_CODES_USED (CODE_TYPE VARCHAR(25) NOT NULL, CODE VARCHAR(25) NOT NULL, CODE_ID bigint NOT NULL) 
ALTER TABLE SYS_CODES_USED ADD CONSTRAINT SYS_CODES_USED_PK PRIMARY KEY NONCLUSTERED (CODE_TYPE, CODE)
CREATE UNIQUE INDEX SYS_CODES_USED_SK ON SYS_CODES_USED(CODE_TYPE, CODE_ID) 

CREATE TABLE SYS_VARS (VAR_GROUP VARCHAR(25) NOT NULL, VAR_CODE VARCHAR(25) NOT NULL, VAR_VALUE VARCHAR(25) NOT NULL, SYS_LSTUPD_DT DATETIME) 
ALTER TABLE SYS_VARS ADD CONSTRAINT SYS_VARS_PK PRIMARY KEY NONCLUSTERED (VAR_GROUP, VAR_CODE)
INSERT INTO SYS_VARS (VAR_GROUP,VAR_CODE,VAR_VALUE) VALUES ('VERSION','SCHEMA','4.0')

CREATE TABLE SYS_STATUS (SYSTEM_CODE VARCHAR(50) NOT NULL, LAST_TOUCH_DT DATETIME) 
ALTER TABLE SYS_STATUS ADD CONSTRAINT SYS_STATUS_PK PRIMARY KEY NONCLUSTERED (SYSTEM_CODE)

CREATE TABLE SYS_EVAL_QUEUE (MSG_ID bigint NOT NULL, DSRC_CODE VARCHAR(25) NOT NULL, ENT_SRC_KEY VARCHAR(40) NOT NULL, MSG VARCHAR(MAX)) 
ALTER TABLE SYS_EVAL_QUEUE ADD CONSTRAINT SYS_EVAL_QUEUE_PK PRIMARY KEY NONCLUSTERED (MSG_ID)
CREATE UNIQUE INDEX IX_EVAL_QUEUE ON SYS_EVAL_QUEUE(ENT_SRC_KEY, DSRC_CODE) 

