name: make github release assets windows

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  make-github-release-assets-windows:
    name: publish binaries - windows
    outputs:
      status: ${{ job.status }}
    runs-on: windows-latest
    strategy:
      matrix:
        senzingsdk-version: ["staging-v4"]

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: install Senzing SDK
        uses: senzing-factory/github-action-install-senzing-sdk@v3
        with:
          senzingsdk-repository-path: ${{ secrets.SENZING_WIN_BETA_REPOSITORY }}

      - name: Set environment variables
        run: |
          Add-Content "$env:GITHUB_PATH" "$Env:USERPROFILE\Senzing\er\lib"
          {
            echo "$Env:SENZING_PATH=$Env:USERPROFILE\Senzing"
            echo $Env:CGO_CFLAGS="-g -I$Env:SENZING_PATH\er\sdk\c"
            echo $Env:CGO_LDFLAGS="-L$Env:SENZING_PATH\er\lib -lSz"
          } >> "$GITHUB_ENV"

      - name: make executable file
        run: go build -o senzing-tools.exe

      - name: upload versioned packages to release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: senzing-tools.exe
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true

  slack-notification:
    needs: [make-github-release-assets-windows]
    if: ${{ always() && contains(fromJSON('["failure", "cancelled"]'), needs.make-github-release-assets-windows.outputs.status ) }}
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    uses: senzing-factory/build-resources/.github/workflows/build-failure-slack-notification.yaml@v2
    with:
      job-status: ${{ needs.make-github-release-assets-windows.outputs.status }}
