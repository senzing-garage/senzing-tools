name: Go test darwin

on: [pull_request, workflow_dispatch]

env:
  SENZING_LOG_LEVEL: TRACE
  SENZING_TOOLS_DATABASE_URL: sqlite3://na:na@nowhere/tmp/sqlite/G2C.db

permissions:
  contents: read

jobs:
  go-test-darwin:
    name: "Go test with Senzing: ${{ matrix.senzingsdk-version }}; OS: macos-latest; Go: ${{ matrix.go }}"
    runs-on: macos-latest
    strategy:
      matrix:
        go: ["1.21"]
        senzingsdk-version: [staging-v4]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Set up gotestfmt
        uses: gotesttools/gotestfmt-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Senzing SDK
        uses: senzing-factory/github-action-install-senzing-sdk@v3
        with:
          senzingsdk-repository-path: ${{ secrets.SENZING_OSX_BETA_REPOSITORY }}

      - name: Set environment variables
        run: |
          SENZING_PATH="${HOME}/senzing"
          {
            echo "SENZING_PATH=${SENZING_PATH}"
            echo "LD_LIBRARY_PATH=${SENZING_PATH}/er/lib:${SENZING_PATH}/er/lib/macos"
            echo "DYLD_LIBRARY_PATH=${SENZING_PATH}/er/lib:${SENZING_PATH}/er/lib/macos"
            echo "SENZING_DATA_DIR=${SENZING_PATH}/er/data"
            echo  CGO_CFLAGS="-g -I${SENZING_PATH}/er/sdk/c"
            echo  CGO_LDFLAGS="-L${SENZING_PATH}/er/lib -lSz -Wl,-no_warn_duplicate_libraries"
          } >> "$GITHUB_ENV"

      - name: Copy /etc files
        run: sudo mkdir -p "${SENZING_PATH}/etc" && sudo cp testdata/senzing-license/g2.lic "${SENZING_PATH}/er/etc/g2.lic"

      - name: Create empty database file
        run: touch /tmp/sqlite/G2C.db

      - name: Run go test
        run: go test -exec "${GITHUB_WORKSPACE}/bin/macos_exec_dyld.sh" -json -v -p 1 -coverprofile=./cover.out -covermode=atomic -coverpkg=./... ./...  2>&1 | tee /tmp/gotest.log | gotestfmt

      - name: Store coverage file
        uses: actions/upload-artifact@v4
        with:
          name: cover.out
          path: ./cover.out

      - name: Upload test log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-log
          path: /tmp/gotest.log
          if-no-files-found: error

  coverage:
    name: Coverage
    needs: go-test-darwin
    uses: senzing-factory/build-resources/.github/workflows/go-coverage.yaml@v2
    with:
      coverage-config: ./.github/coverage/testcoverage.yaml
